name: "Continuous Delivery"

on:
  push:
    tags:
      - v*

jobs:
  build_release:
    name: "Build release"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: "[${{ runner.os }}] Checkout sources"
        uses: actions/checkout@v2
      - name: "[${{ runner.os }}] Cache dependencies"
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
            ${GITHUB_WORKSPACE}/.gradle
          key: ${{ matrix.os }}-devex-release-java16-graal-21.3.0-r17
      - name: "[${{ runner.os }}] Install GraalVM"
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.3.0'
          java: 'java17'
          arch: 'amd64'
      - name: "[${{ runner.os }}] Install native-image"
        run: gu install native-image
      - name: "[${{ runner.os }}] Install Terraform"
        uses: autero1/action-terraform@v1.0.3
        with:
          terraform_version: 1.0.8
      - name: "[${{ runner.os }}] Setup SSH"
        run: |
          mkdir -p ~/.ssh
          cat .github/files/known_hosts > ~/.ssh/known_hosts
          echo "${bot_devex_ssh_private_key}" > ~/.ssh/id_rsa
          chmod -R 500 ~/.ssh
        env:
          bot_devex_ssh_private_key: ${{ secrets.BOT_DEVEX_SSH_PRIVATE_KEY_RSA }}
      - name: "[${{ runner.os }}] Gradle build"
        run: ./gradlew build nativeImage
        env:
          GITLAB_TOKEN: ${{ secrets.BOT_GITLAB_TOKEN_READ_API }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN_READ_ORG_AND_REPO }}
      - name: "[${{ runner.os }}] Smoke test native image"
        run: .github/scripts/run-native-binary.sh
        env:
          GITLAB_TOKEN: ${{ secrets.BOT_GITLAB_TOKEN_READ_API }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN_READ_ORG_AND_REPO }}
      - name: "[${{ runner.os }}] Clean up"
        if: ${{ always() }}
        run: sudo rm -rf ~/.ssh
      - name: '[${{ runner.os }}] Upload artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: devex-${{ runner.os }}
          path: build/native-image/application
          if-no-files-found: error

  create_release:
    name: "Create release"
    needs: build_release
    runs-on: ubuntu-latest
    env:
      release_body_file: "body.txt"
    outputs:
      new_version: ${{ steps.release-files.outputs.new_version }}
      all_files_sha: ${{ steps.release-files.outputs.all_files_sha }}
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v2
      - name: "Download all workflow run artifacts"
        uses: actions/download-artifact@v2
        with:
          path: "artifacts"
      - name: "Generate changelog"
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: "Prepare release files"
        id: release-files
        run: |
          version=${tag_ref/refs\/tags\//}

          # Create sha256sum for each release file
          mkdir release
          cd artifacts
          for file in */*; do release_name="$(dirname ${file})"; cp "${file}" "../release/${release_name}-${version}"; done
          cd ../release
          for file in *; do sha256sum "${file}" > "${file}.sha256sum"; done
          tar czf all-files-${version}.tar.gz *
          sha256sum all-files-${version}.tar.gz > all-files-${version}.tar.gz.sha256sum
          all_files_sha="$( cat all-files-${version}.tar.gz.sha256sum | cut -f 1 -d ' ' )"
          cd ..

          # Create release text
          cat <<'EOF' > "${release_body_file}"
          ## SHA 256
          EOF

          cd release
          for file in *.sha256sum; do echo "- $(cat "${file}")" >> "../${release_body_file}"; done
          cd ..

          cat <<'EOF' >> "${release_body_file}"

          ## Change log
          EOF

          echo "${change_log}" >> "${release_body_file}"
          echo "::set-output name=new_version::${version}"
          echo "::set-output name=all_files_sha::${all_files_sha}"
        env:
          tag_ref: ${{ github.ref }}
          change_log: ${{ steps.changelog.outputs.changelog }}
      - name: "Create release"
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ env.release_body_file }}
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  brew_tap_update:
    name: "Create brew tap update PR"
    needs: create_release
    runs-on: ubuntu-latest
    env:
      new_version: ${{needs.create_release.outputs.new_version}}
      all_files_sha: ${{needs.create_release.outputs.all_files_sha}}
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v2
        with:
          repository: 'miguelaferreira/homebrew-tools'
      - name: "Update formula native image"
        id: update-formula
        run: |
          archive="${new_version}.tar.gz"
          curl -L -O "https://github.com/miguelaferreira/devex-cli/archive/${archive}"
          sha256sum "${archive}"
          archive_sha="$( sha256sum "${archive}" | sed -e "s/  ${archive}//" )"

          echo "::set-output name=archive-sha::${archive_sha}"

          scripts/update-formula.sh "Formula/devex-cli.rb" "${new_version}" "${archive_sha}"
          scripts/update-formula.sh "Formula/devex-cli-native-binary.rb" "${new_version}" "${all_files_sha}"

        env:
          new_version: ${{ env.new_version }}
          all_files_sha: ${{ env.all_files_sha }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.BOT_GITHUB_PAT_PUBLIC_REPO }}
          commit-message: "Update devex-cli formula to version ${{ env.new_version }}"
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          base: main
          branch: update-devex-cli-formula
          delete-branch: true
          title: '[New tool release] DevEx cli update'
          body: |
            This PR
            - Updates devex-cli formulas to version ${{ env.new_version }}
            - Source archive sha is `${{ steps.update-formula.outputs.archive-sha }}`
            - All files package sha is `${{ env.all_files_sha }}`
            - Auto-generated from [devex-cli Continuous Delivery workflow][1] ([workflow src][2])

            [1]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            [2]: https://github.com/miguelaferreira/devex-cli/actions/workflows/create-release.yaml
